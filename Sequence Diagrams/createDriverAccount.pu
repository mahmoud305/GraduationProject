@startuml   
  actor Admin  as Admin
  participant AdminView as AdminView
  participant AdminServices as AdminServices
  participant DriverDataAccess as DriverDataAccess
  database BAASDB as BaasDB
  Admin -> AdminView : createDriver()
  activate Admin
  activate AdminView
  AdminView -> AdminServices : createDriver()
  activate AdminServices
  AdminServices -> DriverDataAccess : get(int)
  activate DriverDataAccess
  DriverDataAccess -> BaasDB : get driver info
  activate BaasDB
  alt  if Driver isn't found  
    BaasDB --> DriverDataAccess : Return driver not found 
    DriverDataAccess --> AdminServices : Throw exception that the driver not found
    AdminServices -> DriverDataAccess : Add the driver
    DriverDataAccess -> BaasDB : Store the driver
    BaasDB --> DriverDataAccess : The driver is stored successfully
    deactivate BaasDB  
    DriverDataAccess --> AdminServices : The addition is done 
    deactivate DriverDataAccess
    AdminServices --> AdminView: The creation is successfully
    deactivate AdminServices
    AdminView --> Admin : Display The creation is successfully
    deactivate AdminView
  else
    activate BaasDB
    BaasDB --> DriverDataAccess : Return driver info 
    deactivate BaasDB
    activate DriverDataAccess
    activate AdminServices
    DriverDataAccess --> AdminServices : Return driver object
    deactivate DriverDataAccess
    activate AdminView
    AdminServices --> AdminView: The driver is exist
    deactivate AdminServices
    AdminView --> Admin : Display The driver username is exist
    deactivate AdminView
  end
@enduml