@startuml   
  actor User  as User
  participant UserView as UserView
  participant UserServices as UserServices
  participant UserDataAccess as UserDataAccess
  database BAASDB as BaasDB
  User -> UserView : Login()
  activate User
  activate UserView
  UserView -> UserServices : checkLoginInfo()
  activate UserServices
  UserServices -> UserDataAccess : get(int)
  activate UserDataAccess
  UserDataAccess -> BaasDB : get user info
  activate BaasDB
  alt  if user is found  
    BaasDB --> UserDataAccess : Return User info 
    deactivate BaasDB
    UserDataAccess --> UserServices : Return User object
    deactivate UserDataAccess
    alt if userInfo matches
      UserServices --> UserView: User password is matching 
      deactivate UserServices
      UserView --> User : Display The login is successfully
      deactivate UserView 
    else if userInfo doesn't match
      activate UserServices
      UserServices --> UserView: User password isn't matching 
      deactivate UserServices
      activate UserView
      UserView --> User : Display Wrong password
      deactivate UserView
    end  
  else if user isn't found
    activate BaasDB
    BaasDB --> UserDataAccess : Return User not found 
    deactivate BaasDB
    activate UserDataAccess
    UserDataAccess --> UserServices : Throw exception that the user not found
    deactivate UserDataAccess
    activate UserServices
    UserServices --> UserView: The user doesn't exist 
    deactivate UserServices
    activate UserView
    UserView --> User : Display User not found
    deactivate UserView
  end
@enduml