@startuml class-diagram


' kont 3ayz 7aga ya m7moud?
package Views {
    ' class or interface?
    interface UserView {

    }

    class OrganizationView {
        +createRoute()
        +createPath()
        +createTrip()
        +createPassenger()
        +showAllPassengers()
        ' include suspend, activate and delete
        +showPassengers()
        ' include suspend, activate and delete
        +showRoutes()
        +payRoute()
    }

    class AdminView {
        +createDriver()
        +showDrivers()
        ' include suspend, activate and delete
        +showOrganizations()
        ' include suspend, activate and delete
        +showComplaints()
        ' includes handle them
        +showExcuses()
        ' includes handle them
    }

    ' bta3t el organization bt3to
    ' omal hy7gz ezay
    ' efrd 3ayz y7gz yawmyan fe path mo3yn
    ' read the comment
    ' de tb2a fl model b2a
    ' fe time ll trip bas
    ' btkreat trip aw path w yb2a leh automatic trips
    ' lazm hy7dd f3ln
    class PassengerView {
        +showRoutes()
        ' includes show paths, trips and book them
        +showMyBookings()
        +showMyComplaints()
        ' includes making new ones
    }

    ' el stops fl path el mfrood mn no3 StopModel
    ' 5aleena fl asasyat
    ' yb2a enta 3ayz class booking
    class DriverView {
        +createExcuse()
        +showMyExcuses()
    }

    class TripView {

    }

    class RouteView {
        +showPaths()
    }

    class ComplaintView {

    }

    class ExcuseView {

    }
}

' ana lma a3ml driver msln
' htrg3ly object mn el class de leh?
' bzabt ya mayo
' bravo mayo
package Services {
    interface UserServices {
        +updateProfile(): void
        +login(): void
    }

    interface FormReport {
        +getUser(): UserModel
        +setTitle(string title): void
        +getTitle(): string
        +getBody(): string
        +setBody(string): void
    }

    ' sada2ny mb2tsh fahem
    ' law enta fahm w mota2aked 2ol
    class AdminServices {
        +createDriver(): DriverModel
        +suspendDriver(): boolean
        +deleteDriver(): boolean
        +deleteOrganization(): boolean
        +handleComplaint(): void
        +handleExcuse(): void
        +assignDriver(): boolean
    }

    class DriverServices {
        +makeExcuse(ExcuseModel): void
    }

    class ExcuseServices {
        +getUser(): DriverModel
        +setTitle(string): void
        +getTitle(): string
        +getBody(): string
        +setBody(string body): void
    }

    class PassengerServices {
        +joinTrip(TripModel): void
        +modifyBooking(TripModel): void
        +cancelBooking(TripModel): void
        +makeComplaint(Complaint): void
    }

    'Each route contains multiple paths'
    'Each route contains source and destination only'
    'Each path contains multiple stops'
    'Each path contains multiple trips'
    'Each trip has one start time'
    class RouteServices {
        +getTrip(TripModel): boolean
        +getAllTrips(): TripModel[]
    }

    class TripServices {
        -bus: BusModel
        -startTime: datetime
        +assignDriver(BusModel, DriverModel): boolean
        +isCompleted(): boolean
    }

    class PathServices {
        +getAllStops(): boolean
        +addStops(StopModel): boolean
    }

    class OrganizationServices {
        +createRoute(Route route): void
        +modifyRoute(Route route): void
        +deleteRoute(Route route): void
        +createPassenger(Passenger p): void
        +suspendPassenger(Passenger p): void
        +activatePassenger(Passenger p): void
        +deletePassenger(Passenger p): void
        +payForRoute(Route route): boolean
        +createTrip(Trip trip): boolean
    }

    ' taradat
    ' ben 5ater mohamed wl manteq
    class ComplaintServices {
        +getUser(): User
        +setTitle(string title): void
        +getTitle(): string
        +getBody(): string
        +setBody(string body): void
    }

    ' this is used by passenger to book paths
    ' t2rybn 3ndk 7a2
    ' bs 7agz ywmyn hn3mlo ezay
    ' la2 blash kda
    ' el booking de trip wa7da only
    ' heya absat ma yakoon 3n el booking y3ny
    class BookingServices {
        -bookTrip()
    }
}

' nseeb tyb el kalam da b3den w n5ls el relationships wl interfaces elly fadla 3shan nkon angazna
' ah shayel
package Models {
    class UserModel {
        -name:string
        -email:string
    }

    class AdminModel {
        -userModel:UserModel
    }

    ' yes
    class PassengerModel {
        -phoneNumber: string
        -userModel: UserModel
        -complaints: ComplaintModel
        -bookingIDs: int[]
        ' booked by the passenger
    }

    class OrganizationModel {
        -userModel:UserModel
        -passengers: PassengerModel[]
        -routes: RouteModel[]
    }

    ' howa bus id da byt8yr kol ad eh?
    ' eshm3na kol youm
    ' momken yso2 aktar mn marra fl youm
    ' 3ashan 5atrk bs
    class DriverModel {
        -userModel: UserModel
        -nationalID: string
        -drivingLicense: ImageIcon
        -driverImg: string
        -tripIDs: int[]
        -busID: int
        -excuses:Excuse
    }

    class ExcuseModel {
        -driver: DriverModel
        -title: string
        -body: string
        -status: string
    }

    class RouteModel {
        -source: string
        -destination: string
        -paths: Path[]
    }

    class ComplaintModel {
        -user: UserModel
        -title: string
        -body: string
    }

    ' 3adooha 3shan nngz hnfkr feha
    class PathModel {
        -stops: Stop[]
        -trips: Trip[]
        -start: datetime
        -end: datetime
    }

    class StopModel {
        -name: string
        -longitude: double
        -latitude: double
    }

    class BusModel {
        -passengersNumber: int
        -driver: DriverModel
        -vehicleLicense: ImageIcon
        -passengers: PassengerModel[]
    }

    class TripModel {
        -date: datetime
        -busCount: int
        -busIDs: int[]
    }

    class BookingModel {
        -passengerID: int
        -bookedTripID: int
    }

    interface IUserDataAccess {
        +add(UserModel): boolean
        +update(UserModel): boolean
        +delete(UserModel): boolean
        +get(int): UserModel
    }

    interface IAdminDataAccess {
        +add(AdminModel)
        +update(AdminModel)
        +delete(AdminModel)
        +get(int)
    }

    interface IExcuseDataAccess {
        +add(ExcuseModel)
        +update(ExcuseModel)
        +delete(ExcuseModel)
        +get(int)
    }

    interface IRouteDataAccess {
        +add(RouteModel)
        +update(RouteModel)
        +delete(RouteModel)
        +get(int)
    }

    interface IComplaintDataAccess {
        +add(ComplaintModel)
        +update(ComplaintModel)
        +delete(ComplaintModel)
        +get(int)
    }

    interface IDriverDataAccess {
        +add(DriverModel)
        +update(DriverModel)
        +delete(DriverModel)
        +get(int)
    }

    interface IOrganizationDataAccess {
        +add(OrganizationModel)
        +update(OrganizationModel)
        +delete(OrganizationModel)
        +get(int)
    }

    interface IPassengerDataAccess {
        +add(PassengerModel)
        +update(PassengerModel)
        +delete(PassengerModel)
        +get(int)
    }

    class UserDataAccess {
        +add(UserModel)
        +update(UserModel)
        +delete(UserModel)
        +get(int)
    }

    class AdminDataAccess {
        +add(AdminModel)
        +update(AdminModel)
        +delete(AdminModel)
        +get(int)
    }

    class ExcuseDataAccess {
        +add(ExcuseModel)
        +update(ExcuseModel)
        +delete(ExcuseModel)
        +get(int)
    }

    class RouteDataAccess {
        +add(RouteModel)
        +update(RouteModel)
        +delete(RouteModel)
        +get(int)
    }

    class ComplaintDataAccess {
        +add(ComplaintModel)
        +update(ComplaintModel)
        +delete(ComplaintModel)
        +get(int)
    }

    class DriverDataAccess {
        +add(DriverModel)
        +update(DriverModel)
        +delete(DriverModel)
        +get(int)
    }

    class OrganizationDataAccess {
        +add(OrganizationModel)
        +update(OrganizationModel)
        +delete(OrganizationModel)
        +get(int)
    }

    class PassengerDataAccess {
        +add(PassengerModel)
        +update(PassengerModel)
        +delete(PassengerModel)
        +get(int)
    }
}

' tamam awl package 5lst
' model package
' el relationships 5lst

UserServices <|.. DriverServices
UserServices <|.. OrganizationServices
UserServices <|.. PassengerServices
UserServices <|.. AdminServices

FormReport <|.. ExcuseServices
FormReport <|.. ComplaintServices

FormReport <- UserServices

DriverServices o-- TripServices

' Bus o- PassengerServices
' Bus o-- DriverServices

OrganizationServices o-- PassengerServices

RouteServices "1" o-- "n" PathServices
PathServices "1" o-- "n" TripServices
RouteServices <-- OrganizationServices

' TripServices "1" *-- "n" Bus

' PathServices "1" *-- "n" Stop

IUserDataAccess <|.. UserDataAccess
IUserDataAccess o-- UserModel

IAdminDataAccess <|.. AdminDataAccess
IAdminDataAccess o-- AdminModel

IComplaintDataAccess <|.. ComplaintDataAccess
IComplaintDataAccess o-- ComplaintModel

IDriverDataAccess <|.. DriverDataAccess
IDriverDataAccess o-- DriverModel

IPassengerDataAccess <|.. PassengerDataAccess
PassengerDataAccess o-- PassengerModel

IOrganizationDataAccess <|.. OrganizationDataAccess
IOrganizationDataAccess o-- OrganizationModel

IExcuseDataAccess <|.. ExcuseDataAccess
IExcuseDataAccess o-- ExcuseModel

IRouteDataAccess <|.. RouteDataAccess
IRouteDataAccess o-- RouteModel

TripModel --o PathModel
PathModel o-- StopModel

DriverModel "1" -- "1" BusModel

PassengerServices -- BookingServices

UserView <|.. OrganizationView
UserView <|.. AdminView
UserView <|.. PassengerView
UserView <|.. DriverView

OrganizationView -- RouteView

DriverView -- ExcuseView

RouteView -- TripView

OrganizationView -- ComplaintView
PassengerView -- ComplaintView

DriverView -- TripView

@enduml

' el packages msh hata5od wa2t
' n3mlha 3la tool
' yes
' homa 3 4 ashom